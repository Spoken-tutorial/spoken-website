# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2025-01-07 07:44
from __future__ import unicode_literals

from django.db import migrations


def copy_feedback_data(apps, schema_editor):
    OriginalModel = apps.get_model('events', 'STWorkshopFeedbackPost')
    FeedbackOpinionModel = apps.get_model('events', 'FeedbackOpinion')
    FeedbackRateModel = apps.get_model('events', 'FeedbackRate')
    FeedbackFeelingsModel = apps.get_model('events', 'FeedbackFeelings')
    NewFeedbackModel = apps.get_model('events', 'WorkshopFeedbackPost')

    feedbackOpinionFields = ["id","spfriendly","diff_watch_practice","satisfied_with_learning_experience","confident","side_by_side_hold_intrest","ws_not_useful","can_learn_other","wantto_conduct_incollege","esy_to_conduct_own","ask_student_to_use","possible_to_use_therotical","not_self_explanatory","logical_sequence","examples_help","other_language","instructions_easy_to_follow","language_complicated","acquired_knowledge","suff_instruction_by_prof","suff_instruction_by_staff","method_easy","desired_objective","recommend","like_to_part","learn_other_side_by_side","referred_forums","referred_forums_after","asked_ques_forums","not_answer_doubts","forum_helpful","doubts_solved_fast","need_not_post","faster_on_forums","not_have_to_wait","not_like_method_forums","helpful_pre_ans_ques","not_like_reveal_identity","forum_motivated","per_asked_ques_before_tuts"]
    feedbackRateFields = ["id","ws_quality","relevance","guidelines","overall_video_quality","text_readability","clarity_of_speech","visual_presentation","pace_of_tutorial","arrangement","network","installation_help","time_for_handson","experience_of_learning","overall_arrangement"]
    feedbackFeelingsFields = ["id","content_management","configuration_management","creating_basic_content","edit_existing_content","create_new_content","grp_entity_ref","taxonomy","managing_content","creating_dummy_content","modify_display_content","contents_using_view","table_of_fields_with_views","control_display_images","adding_func","finding_modules","modifying_page_layout","menu_endpoints","styling_using_themes","installig_ad_themes","people_management","site_management"]
    newFeedbackFields = ["id","user","email","gender","age","participated_before","foss_where","install_own","explain","used_sw_before","sim_framework_before","total_tutorials1","purpose_of_attending","like_to_create_st","like_to_create_st_details","num_of_experts_req","fees","like_abt_ws","how_make_better","experience","suggestions"]
    
    

    for obj in OriginalModel.objects.all():
        # Copy data to new models
        feedbackOpinionData = {field: getattr(obj, field) for field in feedbackOpinionFields}
        FeedbackOpinionModel.objects.create(**feedbackOpinionData)
        feedbackRateData = {field: getattr(obj, field) for field in feedbackRateFields}
        FeedbackRateModel.objects.create(**feedbackRateData)
        feedbackFeelingsData = {field: getattr(obj, field) for field in feedbackFeelingsFields}
        FeedbackFeelingsModel.objects.create(**feedbackFeelingsData)
        newFeedbackFieldsData = {field: getattr(obj, field) for field in newFeedbackFields}
        NewFeedbackModel.objects.create(**newFeedbackFieldsData, opinion_id=obj.id, rate_id=obj.id, feelings_id=obj.id)

class Migration(migrations.Migration):

    dependencies = [
        ('events', '0049_feedbackfeelings_feedbackopinion_feedbackrate_workshopfeedbackpost'),
    ]

    operations = [
        migrations.RunPython(copy_feedback_data)
    ]
